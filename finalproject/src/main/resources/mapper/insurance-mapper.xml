<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kopo.finalproject.insurance.controller.InsuranceMapper">


    <!-- 모든 보험 상품 -->
    <select id="getAllInsuranceProduct"
            resultType="com.kopo.finalproject.insurance.controller.InsuranceProduct">
        SELECT *
        FROM pet_insurance_product
    </select>

    <!-- 품종으로 1위 가져오기 -->
    <select id="getBreedOne" resultType="com.kopo.finalproject.insurance.controller.BreedData"
            parameterType="String">
        SELECT breed,
               disease
        FROM animal_hospital_history
        WHERE breed = #{breed}
        GROUP BY breed, disease
        ORDER BY COUNT(*) DESC
            FETCH FIRST 1 ROWS ONLY
    </select>


    <!-- 품종 비율 가져오기 -->
    <select id="getBreedRatio" resultType="com.kopo.finalproject.insurance.controller.BreedRatio">
        SELECT breed,
               ROUND((COUNT(*) / (SELECT COUNT(*) FROM animal_hospital_history) * 100), 1) AS percentage
        FROM animal_hospital_history
        GROUP BY breed
        ORDER BY percentage DESC
    </select>


    <!-- 나이별로 top3 -->
    <select id="getAgeTopThree" resultType="com.kopo.finalproject.insurance.controller.AgeTopThree">
        WITH TotalCounts AS (SELECT age_group,
                                    COUNT(*) AS total_count
                             FROM animal_hospital_history
                             GROUP BY age_group),
             RankedDiseases AS (SELECT a.age_group,
                                       a.disease,
                                       COUNT(*)                                   AS frequency,
                                       ROUND((COUNT(*) / b.total_count) * 100, 2) AS disease_percentage,
                                       RANK()                                        OVER (PARTITION BY a.age_group ORDER BY COUNT(*) DESC) AS disease_rank
                                FROM animal_hospital_history a
                                         JOIN
                                     TotalCounts b ON a.age_group = b.age_group
                                GROUP BY a.age_group, a.disease, b.total_count)
        SELECT age_group,
               MAX(CASE WHEN disease_rank = 1 THEN disease END)            AS top_disease_1,
               MAX(CASE WHEN disease_rank = 1 THEN disease_percentage END) AS top_disease_1_percentage,
               MAX(CASE WHEN disease_rank = 2 THEN disease END)            AS top_disease_2,
               MAX(CASE WHEN disease_rank = 2 THEN disease_percentage END) AS top_disease_2_percentage,
               MAX(CASE WHEN disease_rank = 3 THEN disease END)            AS top_disease_3,
               MAX(CASE WHEN disease_rank = 3 THEN disease_percentage END) AS top_disease_3_percentage
        FROM RankedDiseases
        GROUP BY age_group
        ORDER BY age_group ASC
    </select>


    <!-- 마이페이지 보험에 들어가야 할 상품-->
    <select id="getAllInsurancesOfPetOfGuest"
            parameterType="HashMap"
            resultType="com.kopo.finalproject.insurance.controller.MyInsurance">
        SELECT JOIN_INSURANCE_ID      as joinInsuranceId,
               GUEST_ID               as guestId,
               PET_ID                 as petId,
               INSURANCE_NAME         as insuranceName,
               JOIN_DATE              as joinDate,
               DEPOSIT_ACCOUNT_NUMBER as depositAccountNumber,
               PAYMENT_COUNT          as paymentCount,
               INSURANCE_AMOUNT       as insuranceAmount
        FROM join_insurance
        WHERE guest_id = #{guest_id}
          AND pet_id = #{pet_id}
    </select>


    <!-- 마이페이지 보험 상세 페이지 내용 -->
    <select id="getInsuDetail"
            parameterType="String"
            resultType="com.kopo.finalproject.insurance.controller.MyInsurance">
        SELECT ji.JOIN_INSURANCE_ID      as joinInsuranceId,
               ji.GUEST_ID               as guestId,
               g.NAME                    as guestName,
               ji.PET_ID                 as petId,
               p.NAME                    as petName,
               ji.INSURANCE_NAME         as insuranceName,
               ji.JOIN_DATE              as joinDate,
               ji.DEPOSIT_ACCOUNT_NUMBER as depositAccountNumber,
               ji.PAYMENT_COUNT          as paymentCount,
               ji.INSURANCE_AMOUNT       as insuranceAmount
        FROM join_insurance ji
                 join guest g on g.guest_id = ji.guest_id
                 join pet p on p.pet_id = ji.pet_id
        WHERE join_insurance_id = #{insu_id}
    </select>


    <!-- 보험 가입 테이블 생성 -->
    <insert id="joinInsurance" parameterType="HashMap">
        INSERT INTO JOIN_INSURANCE(guest_id, pet_id, insurance_name, deposit_account_number, insurance_amount)
        VALUES (#{guestId}, #{petId}, #{insuranceName}, #{depositAccountNumber}, #{insuranceAmount})
    </insert>


</mapper>